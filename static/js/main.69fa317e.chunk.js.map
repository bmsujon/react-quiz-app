{"version":3,"sources":["components/CustomHooks.js","components/Login.js","components/SignUp.js","components/Question.js","components/AdminPanel.js","components/UserPanel.js","components/ProgressMessage.js","App.js","reportWebVitals.js","index.js"],"names":["useFormSubmission","callback","useState","inputs","setInputs","handleSubmit","event","preventDefault","handleInputChange","persist","target","type","name","checked","value","Login","props","history","useHistory","errorMessage","setErrorMessage","isAdmin","currentAdminList","JSON","parse","localStorage","getItem","console","log","find","admin","email","password","setItem","removeItem","push","pathname","currentUserList","user","onSubmit","className","placeholder","onChange","id","for","length","SignUp","nextIndex","stringify","params","href","Question","index","quiz","question","currentQuizList","curr","answerAttempted","A","B","C","D","answer","AdminPanel","currentList","setCurrentQuizList","deleteQuestion","e","findIndex","splice","editQuestion","map","onClick","UserPanel","progress","setProgress","useEffect","solvedList","filter","ProgressMessage","location","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69fa317e.chunk.js","sourcesContent":["import {useState} from \"react\";\n\nconst useFormSubmission = (callback) => {\n  const [inputs, setInputs] = useState({});\n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    callback();\n  }\n  const handleInputChange = (event) => {\n    event.persist();\n    if(event.target.type === \"checkbox\") {\n        setInputs(inputs => ({...inputs, [event.target.name]: event.target.checked}));\n    } else\n        setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  return {\n    handleSubmit,\n    handleInputChange,\n    inputs\n  };\n}\nexport default useFormSubmission;","\nimport React, {useState} from \"react\";\nimport useFormSubmission from './CustomHooks';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function Login(props) {\n    const history = useHistory();\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const loginCalled = () => {\n        if(inputs.isAdmin) {\n            // validate admin user\n            let currentAdminList = JSON.parse(localStorage.getItem('adminList'));\n            console.log(currentAdminList)\n            if(currentAdminList.find(admin => admin.email === inputs.email && admin.password === inputs.password)) {\n                console.log(\"clear to login\")\n                localStorage.setItem(\"loggedIn\", true);\n                localStorage.setItem(\"isAdmin\", true);\n                localStorage.removeItem('isUser');\n                history.push({pathname: \"/admin-panel\"});\n\n            } else {\n                setErrorMessage(\"Invalid admin user email or password\");\n                console.log(\"Invalid admin user email or password\");\n            }\n        } else {\n            //Validate user\n            let currentUserList = JSON.parse(localStorage.getItem('userList'));\n            console.log(currentUserList)\n            if(currentUserList.find(user => user.email === inputs.email && user.password === inputs.password)) {\n                console.log(\"clear to login\")\n                localStorage.setItem(\"loggedIn\", true);\n                localStorage.removeItem('isAdmin');\n                localStorage.setItem(\"isUser\", true);\n                history.push({pathname: \"/user-panel\"});\n            } else {\n                setErrorMessage(\"Invalid user email or password\");\n                console.log(\"Invalid user email or password\");\n            }\n        }\n    }\n    const {inputs, handleInputChange, handleSubmit} = useFormSubmission(loginCalled);\n    \n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Sign In</h3>\n\n            <div className=\"form-group\">\n                <label>Email address</label>\n                <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" onChange={handleInputChange}/>\n            </div>\n\n            <div className=\"form-group\">\n                <label>Password</label>\n                <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name=\"password\" onChange={handleInputChange}/>\n            </div>\n\n            <div className=\"custom-control custom-checkbox\">\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultUnchecked\" name=\"isAdmin\" onChange={handleInputChange}/>\n                <label className=\"custom-control-label\" for=\"defaultUnchecked\">Log as Admin</label>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n            {errorMessage && errorMessage.length>0 ? <p className=\"error\">{errorMessage}</p> : <p>Login Successful</p>}\n        </form>\n    );\n    \n}\n","import React from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport useFormSubmission from './CustomHooks';\n\n\nexport default function SignUp() {\n\n    const history = useHistory();\n    \n    const signUpDone = () => {\n        //Lets update adminlist\n        if(inputs.isAdmin) {\n            let currentAdminList = JSON.parse(localStorage.getItem('adminList'));\n            const nextIndex = currentAdminList.length + 1;\n            currentAdminList.push({id: nextIndex, email: inputs.email, password: inputs.password, isAdmin : true});\n            localStorage.setItem('adminList', JSON.stringify(currentAdminList));\n            console.log(currentAdminList)\n        } else { //update userList\n            let currentUserList = JSON.parse(localStorage.getItem('userList'));\n            const nextIndex = currentUserList.length + 1;\n            currentUserList.push({id: nextIndex, email: inputs.email, password: inputs.password});\n            localStorage.setItem('userList', JSON.stringify(currentUserList));\n        }\n        \n        history.push({pathname: \"/sign-in\", params: inputs});\n    };\n    const {inputs, handleInputChange, handleSubmit} = useFormSubmission(signUpDone);\n\n\n\n    console.log(JSON.parse(localStorage.getItem('adminList')))\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Sign Up</h3>\n\n            <div className=\"form-group\">\n                <label>First name</label>\n                <input type=\"text\" className=\"form-control\" placeholder=\"First name\" name=\"firstName\" onChange={handleInputChange}/>\n            </div>\n\n            <div className=\"form-group\">\n                <label>Last name</label>\n                <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" name=\"lastName\" onChange={handleInputChange}/>\n            </div>\n\n            <div className=\"form-group\">\n                <label>Email address</label>\n                <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" onChange={handleInputChange}/>\n            </div>\n\n            <div className=\"form-group\">\n                <label>Password</label>\n                <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name=\"password\" onChange={handleInputChange}/>\n            </div>\n            \n            <div className=\"custom-control custom-checkbox\">\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultUnchecked\" name=\"isAdmin\" onChange={handleInputChange}/>\n                <label className=\"custom-control-label\" for=\"defaultUnchecked\">Sign up as Admin</label>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n            <p className=\"forgot-password text-right\">\n                Already registered? <a href=\"/sign-in\">sign in</a>\n            </p>\n        </form>\n    );\n    \n}","import React from \"react\";\n\n\nexport default function Question(props, index) {\n\tconsole.log(props)\n\n\tlet quiz = props.quiz;\n\tconst isAdmin = localStorage.getItem(\"isAdmin\");\n\t\n\tconst onChangeValue = (event) => {\n\t    console.log(event.target.value);\n\t    let currentQuizList = JSON.parse(localStorage.getItem('quizList'));\n\t    currentQuizList.find(curr => curr.id===quiz.id).answerAttempted = event.target.value;\n\t    localStorage.setItem('quizList', JSON.stringify(currentQuizList));\n\t    // console.log(JSON.parse(localStorage.getItem('quizList')) || []);\n\t}\n\n\n\n\treturn(\n\t\t<div className=\"container-fluid col-md-12\">\n\t\t\t<div className=\"row-fluid\">\n\t\t\t\t<h3>{props.index + 1}. {quiz.question}</h3>\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<div onChange={onChangeValue}>\n\t\t\t        <input type=\"radio\" value={quiz.A} name={\"answer\" + quiz.id} /> {quiz.A}\n\t\t\t        <input type=\"radio\" value={quiz.B} name={\"answer\" + quiz.id} /> {quiz.B}\n\t\t\t        <input type=\"radio\" value={quiz.C} name={\"answer\" + quiz.id} /> {quiz.C}\n\t\t\t        <input type=\"radio\" value={quiz.D} name={\"answer\" + quiz.id} /> {quiz.D}\n\t\t\t     </div>\n\t\t     </div>\n\t\t     {isAdmin?\n\t\t     \t<div className=\"text-center\">\n\t\t\t     \t<h3>Answer: {quiz.answer}</h3>\n\t\t\t     \t\n\t\t\t\t</div>\n\t\t     \t:null\n\t\t     }\n\t     </div>\n\t\t\n\t);\n}","import React, {useState} from \"react\";\nimport Question from './Question';\n\nexport default function AdminPanel() {\n\n\tlet currentQuizList = JSON.parse(localStorage.getItem('quizList'));\n\n\tconst [currentList, setCurrentQuizList] = useState(currentQuizList);\n\n\tconst deleteQuestion = (e, quiz) => {\n\t\te.preventDefault();\n\t\tlet currentQuizList = JSON.parse(localStorage.getItem('quizList'));\n\t    // currentQuizList.find(curr => curr.id===quiz.id)\n\t    const index = currentQuizList.findIndex(curr => curr.id === quiz.id);\n\t    if (index > -1) {\n\t\t  currentQuizList.splice(index, 1);\n\t\t  console.log(\"deleted\")\n\t\t  localStorage.setItem('quizList', JSON.stringify(currentQuizList));\n\t\t  setCurrentQuizList(JSON.parse(localStorage.getItem('quizList')));\n\t\t}\n\t\t\n\t\tconsole.log(currentQuizList.length);\n\t}\n\n\tconst editQuestion = (e) => {\n\t\te.preventDefault();\n\t\tconsole.log(\"deleteQuestion\")\n\t\t// To DO\n\t}\n\n\t// console.log(currentQuizList)\n\treturn(\n\t\t<div>\n\t\t\t<h3 className=\"title\">Edit or Delete Question</h3><hr/>\n\t\t\t{\n\t\t\t\tcurrentList.map((quiz, index) => \n\t\t\t\t\t<>\n\t\t\t\t\t<Question key={quiz.id} quiz = {quiz} index = {index} onClick={deleteQuestion} />\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={e => deleteQuestion(e, quiz)}>Delete</button>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={editQuestion}>Edit</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t);\n}","import React, {useState, useEffect} from \"react\";\nimport Question from './Question';\n\nimport { useHistory } from 'react-router-dom';\n\nexport default function UserPanel() {\n\tlet currentQuizList = JSON.parse(localStorage.getItem('quizList')); \n\tconst [progress, setProgress] = useState(\"\");\n\tconst history = useHistory();\n\n\tuseEffect (() => {\n\t\tif(progress && progress.length > 0) {\n\t\t\thistory.push({pathname: \"/progress-message\", params: progress});\n\t\t}\n\t});\n\n\tconst submitQuiz = (e) => {\n\t\te.preventDefault();\n\t\tcurrentQuizList = JSON.parse(localStorage.getItem('quizList'));\n\t\tconst solvedList = currentQuizList.filter(quiz => quiz.answer === quiz.answerAttempted);\n\t\tsetProgress(\"You have solved \" + solvedList.length + \" of \" + currentQuizList.length + \" questions.\");\n\t\tconsole.log(progress)\n\t\t\n\t}\n\n\treturn(\n\n\t\t<>\n\t\t\t<h3 className=\"title\">Take Quiz</h3><hr/>\n\t\t\t{\n\t\t\t\tcurrentQuizList.map((quiz, index) => \n\t\t\t\t\t<>\n\t\t\t\t\t\t<Question key={quiz.id} quiz = {quiz} index = {index} />\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t}\n\t\t\t<button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={submitQuiz}>Submit</button>\n\t\t</>\n\n\t);\n}","import React from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nexport default function ProgressMessage(props) {\n\tconst history = useHistory();\n\n\tconst handleRetake = (e) => {\n\t\te.preventDefault();\n\t\thistory.push({pathname: \"/user-panel\"})\n\t}\n\n\treturn(\n\t\t<>\n\t\t<h3 className=\"progress\">{props.location.params}</h3>\n\t\t<button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={handleRetake}>Re-Take</button>\n\t\t</>\n\t);\n}","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport AdminPanel from \"./components/AdminPanel\";\nimport UserPanel from \"./components/UserPanel\";\nimport ProgressMessage from \"./components/ProgressMessage\";\n\nfunction App() {\n\n  let adminList = [{id: 1, email: \"admin@gmail.com\", password: \"123456\", isAdmin : true}];\n  localStorage.setItem('adminList', JSON.stringify(adminList));\n\n  let userList = [{id: 1, email: \"user@gmail.com\", password: \"123456\"}];\n  localStorage.setItem('userList', JSON.stringify(userList));\n\n  let quizList = [\n    {\n      id: 1, \n      question:\"What's the name of the  capital of Bangladesh?\", \n      A: \"Dhaka\", \n      B: \"Jessore\", \n      C: \"Sylhet\", \n      D: \"Rajshahi\", \n      answer: \"Dhaka\",\n      answerAttempted: \"\"\n    },\n    {\n      id: 2, \n      question:\"What's the name of the  capital of India?\", \n      A: \"Dhaka\", \n      B: \"Jessore\", \n      C: \"Delhi\", \n      D: \"Rajshahi\", \n      answer: \"Delhi\",\n      answerAttempted: \"\"\n    },\n    {\n      id: 3, \n      question:\"What's the name of the  capital of Pakisthan?\", \n      A: \"Dhaka\", \n      B: \"Jessore\", \n      C: \"Islamabad\", \n      D: \"Rajshahi\", \n      answer: \"Islamabad\",\n      answerAttempted: \"\"\n    }\n  ];\n\n  localStorage.setItem('quizList', JSON.stringify(quizList));\n  \n  return (<Router>\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to={\"/sign-in\"}>Quiz App</Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link>\n              </li>\n              {<li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/sign-up\"}>Sign up</Link>\n              </li>}\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <Switch>\n            <Route exact path='/' component={SignUp} />\n            <Route path=\"/sign-in\" component={Login} />\n            {<Route path=\"/sign-up\" component={SignUp} />}\n            <Route path=\"/admin-panel\" component={AdminPanel} />\n            <Route path=\"/user-panel\" component={UserPanel} />\n            <Route path=\"/progress-message\" component={ProgressMessage} />\n          </Switch>\n        </div>\n      </div>\n    </div></Router>\n  );\n}\n\nexport default App;","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}